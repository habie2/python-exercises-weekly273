"""
@title: exercise1
@author: habi2
@date: 08/11/2021

Create a function that generates a random password. The password generated by the function
must have the following characteristics:
a. Length between 8 and 12 characters
b. Use at least one uppercase character, a number and a symbol. The function must be able to
generate passwords containing more than one character of these types, not just a single one
of each type.
"""
import string, random 

def password_funtion():
    '''
We are going to generate three list and for a random number of times (8-12)
choose randomly betwewn those three lists and append the characters to the 
passwrods, finally if the password does not checks the needs, it will be
newly generated until it checks them.
'''
    lista_abc = []
    for i in string.ascii_uppercase:    #We generate a abc with a for loop,string.ascii_uppercase generates a string  
        lista_abc.append(i)             #with this form: ABCDF...

    lista_punct = []
    for i in string.punctuation:    #We generate a punctuation with a for loop,string.ascii_uppercase generates a string  
        lista_punct.append(i)             #with this form: !"#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~

    lista_numb = []
    for i in string.digits:    #We generate a list with the numbers  
        lista_numb.append(i)

    password = []

    for _ in range(random.randrange(8, 13)):
        new_cha = random.randrange(1, 4)

        if new_cha == 1:   #We add a uppercase
            password.append(lista_abc[random.randrange(0, len(lista_abc))])
        elif new_cha == 2:  #We add a puntuation symbol 
            password.append(lista_punct[random.randrange(0, len(lista_punct))])
        else:       #We add a digit
            password.append(lista_numb[random.randrange(0, len(lista_numb))])
    
    for i in range(len(password)):
        if password[i] in lista_abc:
            lista_abc_presence = True
        elif password[i] in lista_punct:
            lista_punct_presence = True
        elif password[i] in lista_numb:
            lista_numb_presence = False
    
    #This part does not really work :) 
    '''if not (lista_abc_presence == True and lista_punct_presence == True and lista_numb_presence == True):
        password_funtion()'''

    #Printing the function
    for i in range(len(password)):
        print(password[i], end = '')

password_funtion()